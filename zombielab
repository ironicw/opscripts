do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==4) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (v0==3) then v10=setmetatable;v11=pcall;v12=select;v0=4;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==2) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (v0==5) then function v15(v16,v17)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==6) then v29=nil;function v29()local v39=0;local v40;local v41;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v39~=(1 -0)) then else v42=nil;v43=nil;v39=7 -5;end if (v39==(4 -2)) then v44=nil;v45=nil;v39=1826 -(1609 + 214);end if (v39==3) then v46=nil;v47=nil;v39=3 + 1;end if ((1505 -(502 + 1003))==v39) then v40=0;v41=nil;v39=1;end if (v39==4) then while true do if (v40==0) then v41=0;v42=nil;v40=1;end if (v40~=3) then else v47=nil;while true do local v79=0;local v80;local v81;while true do if (v79~=(1032 -(145 + 887))) then else v80=0;v81=nil;v79=1;end if (v79~=(1 -0)) then else while true do if (v80~=(0 -0)) then else v81=0;while true do if (v81~=0) then else if (v41~=1) then else local v101=0;local v102;while true do if (v101~=0) then else v102=0;while true do if (v102==1) then local v109=0;while true do if (v109~=(0 + 0)) then else for v184=1,v46 do local v185=0 -0;local v186;local v187;local v188;while true do if ((1 + 0)==v185) then v188=nil;while true do if (v186~=0) then else v187=v22();v188=nil;v186=1;end if ((1 + 0)==v186) then if (v187==1) then v188=v22()~=(0 -0);elseif (v187==2) then v188=v25();elseif (v187==(915 -(692 + 220))) then v188=v26();end v47[v184]=v188;break;end end break;end if (v185~=0) then else local v206=0 -0;while true do if (v206==(0 -0)) then v186=0 + 0;v187=nil;v206=1;end if ((1822 -(1762 + 59))~=v206) then else v185=1902 -(82 + 1819);break;end end end end end v45[3 + 0]=v22();v109=934 -(5 + 928);end if ((1374 -(79 + 1294))==v109) then v102=2;break;end end end if (v102==(4 -2)) then v41=2;break;end if ((0 -0)~=v102) then else local v110=729 -(693 + 36);while true do if (v110==1) then v102=2 -1;break;end if (v110~=(0 + 0)) then else v46=v24();v47={};v110=1836 -(744 + 1091);end end end end break;end end end if ((3 -1)==v41) then local v103=0 + 0;local v104;while true do if (v103==0) then v104=0;while true do local v108=663 -(68 + 595);while true do if ((0 -0)==v108) then if ((1 + 0)==v104) then local v112=0 -0;while true do if (0==v112) then local v197=0 -0;while true do if (v197~=(1389 -(906 + 483))) then else for v225=1 + 0,v24() do v44[v225]=v24();end return v45;end end end end end if (v104==0) then for v189=1,v24() do local v190=0 -0;local v191;local v192;while true do if (v190==(860 -(557 + 303))) then local v207=0;while true do if (v207~=(1 + 0)) then else v190=1;break;end if (0==v207) then v191=0 -0;v192=nil;v207=2 -1;end end end if (v190==1) then while true do if (0==v191) then v192=v22();if (v21(v192,1,3 -2)~=0) then else local v254=0;local v255;local v256;local v257;local v258;while true do if (v254==0) then v255=0;v256=nil;v254=1;end if (v254~=(1 + 0)) then else v257=nil;v258=nil;v254=2;end if (v254~=(527 -(166 + 359))) then else while true do if (v255~=(1 + 2)) then else if (v21(v257,3,6 -3)~=1) then else v258[4]=v47[v258[4]];end v42[v189]=v258;break;end if (v255==(0 + 0)) then local v281=0;local v282;while true do if ((0 -0)~=v281) then else v282=0 + 0;while true do if (v282~=(1 -0)) then else v255=1;break;end if (0~=v282) then else local v296=0;while true do if (v296~=1) then else v282=1 + 0;break;end if (v296~=0) then else v256=v21(v192,1728 -(111 + 1615),3 + 0);v257=v21(v192,4,6);v296=1;end end end end break;end end end if (v255==1) then local v283=1425 -(885 + 540);while true do if (v283~=(1278 -(1240 + 37))) then else v255=2;break;end if (v283~=0) then else v258={v23(),v23(),nil,nil};if (v256==(0 -0)) then local v295=0;while true do if (v295~=0) then else v258[3]=v23();v258[7 -3]=v23();break;end end elseif (v256==(1731 -(1482 + 248))) then v258[2 + 1]=v24();elseif (v256==2) then v258[3]=v24() -((6 -4)^(1512 -(870 + 626)));elseif (v256~=(8 -5)) then else local v301=0;local v302;while true do if (v301~=(253 -(202 + 51))) then else v302=0;while true do if (v302~=(0 + 0)) then else v258[94 -(60 + 31)]=v24() -((788 -(206 + 580))^16);v258[4]=v23();break;end end break;end end end v283=3 -2;end end end if (v255~=2) then else if (v21(v257,3 -2,2 -1)==1) then v258[1 + 1]=v47[v258[3 -1]];end if (v21(v257,2,2)~=(3 -2)) then else v258[3]=v47[v258[809 -(463 + 343)]];end v255=2 + 1;end end break;end end end break;end end break;end end end for v193=1,v24() do v43[v193-1]=v29();end v104=1 + 0;end break;end end end break;end end end v81=1;end if (v81==(2 -1)) then if (v41~=0) then else local v105=0 + 0;while true do if (v105~=(0 + 0)) then else local v106=1423 -(1349 + 74);while true do if (v106==0) then v42={};v43={};v106=2 -1;end if (v106==1) then v105=1 + 0;break;end end end if (1==v105) then local v107=0;while true do if (v107~=1) then else v105=7 -5;break;end if (v107==0) then v44={};v45={v42,v43,nil,v44};v107=1;end end end if (2==v105) then v41=1;break;end end end break;end end break;end end break;end end end break;end if ((2 + 0)~=v40) then else local v77=0;while true do if (v77==0) then v45=nil;v46=nil;v77=1;end if (v77==1) then v40=1 + 2;break;end end end if ((1001 -(21 + 979))==v40) then local v78=0;while true do if (v78==1) then v40=708 -(347 + 359);break;end if (v78==0) then v43=nil;v44=nil;v78=3 -2;end end end end break;end end end v30=nil;v18=7;end if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==1) then v21=nil;function v21(v31,v32,v33)if v33 then local v64=(v31/((5 -3)^(v32-((6871 -5255) -(173 + 1442)))))%(2^(((v33-(2 -1)) -(v32-(756 -(564 + 191)))) + (1289 -(1075 + 213))));return v64-(v64%(553 -(153 + 399)));else local v65=1742 -(4 + 557 + 1181);local v66;while true do if ((0 + 0)==v65) then v66=2^(v32-(3 -2));return (((v31%(v66 + v66))>=v66) and (1699 -(715 + 983))) or 0;end end end end v22=nil;v18=2;end if (v18==0) then v19=1;v20=nil;v16=v5(v4(v16,5),"..",function(v34)if (v2(v34,2)==79) then v20=v1(v4(v34,1,1));return "";else local v67=v3(v1(v34,16));if v20 then local v68=v6(v67,v20);v20=nil;return v68;else return v67;end end end);v18=1;end if (v18==3) then v24=nil;function v24()local v48,v49,v50,v51=v2(v16,v19,v19 + (14 -11));v19=v19 + (15 -11);return (v51 * 16777216) + (v50 * 65536) + (v49 * (125 + 131)) + v48;end v25=nil;v18=4;end if (v18==4) then function v25()local v52=v24();local v53=v24();return (( -(1 + 1) * v21(v53,419 -(210 + 177))) + (1146 -(91 + 640 + 414))) * ((1989 -(527 + 1460))^(v21(v53,389 -(138 + 230),976 -((1066 -(369 + 97)) + 345)) -(567 + 456))) * ((((v21(v53,1745 -(1358 + 386),45 -25) * (((1267 -923) -(115 + 227))^(26 + 6))) + v52)/((250 -(171 + 35 + 42))^(139 -87))) + 1);end v26=nil;function v26(v35)local v54=0;local v55;local v56;while true do if (v54==(2 + 0)) then v56={};for v69=885 -(93 + 791), #v55 do v56[v69]=v3(v2(v4(v55,v69,v69)));end v54=(8 + 1) -6;end if (v54==(0 + 0)) then v55=nil;if  not v35 then local v71=1728 -(175 + 1553);while true do if (v71==((0 -0) + (905 -(436 + 469)))) then v35=v24();if (v35==(0 + 0)) then return "";end break;end end end v54=1 + 0;end if (v54==(1843 -(1360 + 482))) then v55=v4(v16,v19,(v19 + v35) -(1 -0));v19=v19 + v35;v54=(2301 -(963 + 107)) -(44 + (2230 -(622 + 423)));end if (v54==(1689 -(415 + 1271))) then return v7(v56);end end end v18=5;end if (v18==2) then function v22()local v57=v2(v16,v19,v19);v19=v19 + 1;return v57;end v23=nil;function v23()local v58,v59=v2(v16,v19,v19 + (4 -2));v19=v19 + 1 + 1;return (v59 * 256) + v58;end v18=3;end if (v18==7) then function v30(v36,v37,v38)local v60=0;local v61;local v62;local v63;while true do if (v60==0) then v61=v36[1];v62=v36[2];v60=1;end if (v60==1) then v63=v36[3];return function(...)local v72=1;local v73= -1;local v74={...};local v75=v12("#",...) -1;local function v76()local v82=v61;local v83=Const;local v84=v62;local v85=v63;local v86=v28;local v87={};local v88={};local v89={};for v94=0,v75 do if (((1907 -(540 + 956))<=(1450 + 1147)) and (v94>=v85)) then v87[v94-v85]=v74[v94 + 1 + 0 + 0];else v89[v94]=v74[v94 + 1];end end local v90=(v75-v85) + (2 -1);local v91;local v92;while true do local v95=0 + 0 + 0;local v96;local v97;while true do if (((14242 -10148)<(13764 -9661)) and (v95==(0 + 0))) then v96=0;v97=nil;v95=1 + 0;end if (((1501 -(4 + 23))<=3286) and (v95==((2 -1) -0))) then while true do if (((773 -263)==(738 -(83 + 145))) and (v96==0)) then v97=0;while true do if ((v97==1) or (3624==(2428 -1567))) then if ((v92<=15) or ((1820 -(503 + 296))>4811)) then if (((2637 -1346)>574) and (v92<=(18 -11))) then if (((1602 -(1273 + 115))<=(3386 -2447)) and (v92<=(3 + 0))) then if ((v92<=(1 -0)) or ((4694 -(278 + 62 + 464))<(131 + 615))) then if ((v92>(0 + 0)) or ((4211 -(767 + 711 + 309))<(2044 + 69))) then local v113=48 -(26 + 22);local v114;local v115;while true do if ((v113==(0 -0)) or ((2425 -1443)==((8101 -6218) + 1916))) then v114=0 -0;v115=nil;v113=1;end if ((v113==1) or (((6258 -(672 + 493)) -(796 + 209))<1190)) then while true do if ((v114==(0 + 0)) or (((5841 -(367 + 171)) -(1289 + 603))<=(1816 -(785 + 202)))) then v115=v91[207 -(194 + 11)];v89[v115](v13(v89,v115 + (1195 -(380 + 814)),v73));break;end end break;end end elseif ( not v89[v91[2]] or ((1054 + 2457)<81)) then v72=v72 + (662 -(496 + 165));else v72=v91[2 + 1];end elseif (((4770 -2220)>=(395 + 251)) and (v92>2)) then if ((v89[v91[2 -0]]==v91[4 + 0]) or ((4260 -1338)<(1142 -536))) then v72=v72 + (1619 -(1467 + 151));else v72=v91[3];end else v89[v91[3 -1]]=v37[v91[113 -(16 + 94)]];end elseif ((v92<=(111 -(10 + 37 + 59))) or ((1177 + 180)<=(1560 -(158 + 1055)))) then if ((3737<(1890 + 2321)) and (v92>(1415 -(48 + 1363)))) then for v195=v91[9 -7],v91[2 + 1] do v89[v195]=nil;end else local v117=0;local v118;local v119;local v120;local v121;while true do if (((5098 -1658)>=(2834 -(1182 + 235))) and (1==v117)) then v120=nil;v121=nil;v117=2;end if ((v117==(2 + (1894 -(58 + 1836)))) or ((4151 -2977)>4378)) then while true do if ((v118==(0 -0)) or (648<(1220 -618))) then local v208=533 -(130 + 403);while true do if (((2519 + 1686)>(2632 -(979 + 667))) and (v208==((0 -0) + 0))) then v119=v84[v91[1480 -(233 + 1244)]];v120=nil;v208=1 + 0;end if (((623 + 1479)>=(346 + (1142 -722))) and ((2 -1)==v208)) then v118=(6 -4) -1;break;end end end if ((v118==(4 -2)) or ((1721 -(53 + 1440))>=(3098 -(168 + 84)))) then for v227=1 + 0,v91[10 -6] do local v228=550 -(105 + 445);local v229;local v230;while true do if (((8277 -3557)>=(175 + 433)) and (v228==(1 + 0))) then while true do if (((1730 -(925 + 688))<(544 + 2589)) and (v229==(2 -1))) then if ((((5691 -3198) + 683)>=((3090 -634) -(227 + 1613))) and (v230[1 + 0]==16)) then v121[v227-(2 -1)]={v89,v230[3]};else v121[v227-(1 + 0)]={v37,v230[2 + 1]};end v88[ #v88 + 1 + 0]=v121;break;end if ((v229==(0 + 0)) or ((471 -(360 + 77))>=((1714 + 1140) -(63 + 393)))) then v72=v72 + 1;v230=v82[v72];v229=1 + 0;end end break;end if ((v228==(916 -(139 + 777))) or ((5453 -3461)<=(424 + 1021))) then v229=(567 -(413 + 154)) + 0;v230=nil;v228=(7595 -5648) -(97 + 1849);end end end v89[v91[2 -0]]=v30(v119,v120,v38);break;end if ((1875>(2348 -(507 + 873))) and (v118==(1067 -(1029 + (381 -(84 + 260)))))) then v121={};v120=v10({},{__index=function(v231,v232)local v247=0 -0;local v248;local v249;while true do if ((1==v247) or (((2585 + 2637) -(1620 + 67))>=(4827 -(571 + 235)))) then while true do if ((4102<4432) and (v248==(0 -0))) then v249=v121[v232];return v249[1 + 0][v249[2 + 0]];end end break;end if (((6667 -4782)>=(1964 -(80 + 1492))) and (v247==(0 -0))) then v248=831 -(614 + 217);v249=nil;v247=1628 -(288 + 1339);end end end,__newindex=function(v233,v234,v235)local v250=0 + 0;local v251;local v252;while true do if (((3421 -(114 + 176))>(1472 + 20)) and (v250==0)) then v251=(2125 -(740 + 726)) -((844 -(680 + 84)) + 35 + 544);v252=nil;v250=1355 -((1550 -(106 + 704)) + 614);end if ((4797==(21628 -16831)) and (v250==1)) then while true do if ((398<=(887 -456)) and (v251==(1922 -(856 + 1066)))) then v252=v121[v234];v252[1 + 0][v252[2]]=v235;break;end end break;end end end});v118=5 -3;end end break;end if ((v117==(556 -(156 + 400))) or (2632<(2467 -(9 + 308)))) then v118=(1408 -(687 + 721)) + 0;v119=nil;v117=748 -((889 -343) + 201);end end end elseif ((v92>(1271 -(800 + 465))) or ((4562 -3145)>=(2452 -(33 + 781)))) then local v122=0 + 0 + 0;local v123;local v124;local v125;local v126;while true do if ((v122==(1910 -(1127 + 783))) or (1000>(915 + 3580))) then v123=0;v124=nil;v122=1913 -(956 + 956);end if (((851 + 678)>(1975 -((2001 -(572 + 1020)) + 420))) and (v122==(1 + 1))) then while true do if (((1302 + 2265)==(4324 -(2954 -2197))) and (v123==1)) then v126=0 -0;for v236=v124,v91[4] do local v237=1670 -(718 + 952);local v238;while true do if (((4936 -(856 + 9))>=(4460 -(4144 -(942 + 217)))) and (v237==(0 -(385 -(374 + 11))))) then v238=0 + (1688 -(66 + 1622));while true do if ((4795>=2915) and ((0 -0)==v238)) then v126=v126 + ((948 -(225 + 721)) -1);v89[v236]=v125[v126];break;end end break;end end end break;end if ((v123==(0 + 0)) or (((934 + 673) -(17 + 23))>=(4814 -(331 + 281)))) then v124=v91[7 -5];v125={v89[v124](v13(v89,v124 + (434 -(206 + 227)),v73))};v123=1;end end break;end if (((2213 + 1393)>(8859 -5868)) and (v122==(1608 -(1070 + 537)))) then v125=nil;v126=nil;v122=115 -(89 + 24);end end else local v127=0;local v128;local v129;while true do if ((2387<=(6068 -(518 + 539 + 35))) and (v127==(0 -0))) then v128=0 -0;v129=nil;v127=3 -2;end if ((v127==(1354 -(481 + 872))) or (4214==(2536 -1471))) then while true do if (((2424 + (8741 -6174))>3104) and (v128==(0 + (585 -(541 + 44))))) then v129=v91[1069 -((744 -(16 + 36)) + 375)];v89[v129]=v89[v129](v13(v89,v129 + 1,v73));break;end end break;end end end elseif (((10216 -6405)>=(3346 -(44 + 972))) and (v92<=(31 -20))) then if ((1680<4716) and (v92<=9)) then if (((46 + 762)<=(5856 -(1585 + 355))) and (v92==(240 -(91 + 141)))) then v89[v91[933 -(821 + 110)]]=v91[1510 -(311 + 1196)];else v89[v91[8 -6]]=v89[v91[(31 -22) -6]][v91[703 -(357 + 342)]];end elseif (((2399 -1240)==((9969 -6321) -2489)) and (v92>(1047 -(265 + 772)))) then local v132=0 + 0;local v133;local v134;while true do if (((0 + (1308 -(1014 + 294)))==v132) or (4623==(5674 -3558))) then local v198=461 -(368 + 93);while true do if ((((121 + 394) -397)==(777 -(630 + 29))) and (v198==(0 -0))) then v133=0 -0;v134=nil;v198=2 -1;end if (((425 + 1430)>(2186 -(156 + 1026))) and (v198==(1 -0))) then v132=(999 -(60 + 936)) -(1 + 1);break;end end end if ((4069>1068) and ((3 -(4 -2))==v132)) then while true do if ((v133==0) or ((691 + 1452)>(8293 -5663))) then v134=v91[2 + 0];v89[v134]=v89[v134](v13(v89,v134 + 1,v91[2 + 1]));break;end end break;end end else local v135=0 -0;local v136;local v137;while true do if (((6802 -(518 + 1178 + 282))>2452) and (v135==(0 -0))) then v136=(2378 -816) -(1452 + 110);v137=nil;v135=2 -1;end if (((2562 -1553)>=(754 -(146 + 381))) and (v135==1)) then while true do if ((v136==0) or ((5292 -3190)>(1042 + 2971))) then v137=v91[2];v89[v137](v89[v137 + (264 -(9 + 254))]);break;end end break;end end end elseif ((v92<=(59 -46)) or ((4629 -(3534 -2020))<=(3900 -(2713 -1266)))) then if ((4187>(6456 -4746)) and (v92==12)) then v89[v91[1902 -(653 + 1247)]]= -v89[v91[3 + 0]];else local v139=1222 -(1213 + 9);local v140;local v141;local v142;local v143;local v144;while true do if ((v139==(669 -((1463 -(910 + 278)) + 392))) or (1628>=2305)) then v144=nil;while true do if ((v140==(920 -(314 + 605))) or ((5211 -((963 -(663 + 10)) + 503))<=1343)) then local v212=1963 -((4750 -3044) + 257);while true do if (((1965 + 907 + 1513)>(2477 -(436 + 172))) and (v212==(1437 -((1513 -(11 + 866)) + 800)))) then v140=4 -2;break;end if (((5540 -(875 + 103))>(3051 -(244 + 964))) and (v212==(0 + 0))) then v73=(v143 + v141) -1;v144=174 -(30 + 144);v212=(1438 -(176 + 1261)) + 0;end end end if ((v140==(2 + 0)) or ((869 + 3404)<740)) then for v239=v141,v73 do local v240=888 -(229 + 659);local v241;while true do if (((298 + 64)>(9 + 346)) and (v240==0)) then v241=0 -0;while true do if ((v241==0) or (3505<=(8514 -5780))) then v144=v144 + (4 -3);v89[v239]=v142[v144];break;end end break;end end end break;end if ((v140==0) or ((2143 + 128)>=((5335 -1300) + 713))) then local v213=0;while true do if ((v213==(0 + 0)) or (2356>(2770 -(76 + (374 -223))))) then v141=v91[7 -5];v142,v143=v86(v89[v141](v13(v89,v141 + (2 -1) + 0,v91[122 -(7 + 112)])));v213=1774 -(402 + 1371);end if ((v213==(1052 -(11 + 1040))) or (((282 -165) -58)>(4800 -(15 + 2)))) then v140=2 -1;break;end end end end break;end if ((v139==1) or (3609==4050)) then v142=nil;v143=nil;v139=77 -(55 + 20);end if ((4212>3443) and (v139==(0 -0))) then v140=0 + 0;v141=nil;v139=3 -2;end end end elseif ((v92==14) or ((2001 + 1462)==((4865 + 1969) -(1731 + 180)))) then v89[v91[1 + 1]]=v38[v91[7 -4]];else local v146=0 + 0;local v147;local v148;local v149;local v150;local v151;local v152;while true do if ((v146==(279 -(45 + 233))) or (3954==(4390 -(1000 + 839)))) then local v199=0;while true do if ((v199==(0 -0)) or ((368 + 480)==(3466 -(6 + 495)))) then v149=nil;v150=nil;v199=(1944 -(623 + 588)) -((1419 -(628 + 143)) + 84);end if ((77<(1547 + (6299 -4520))) and (v199==(1351 -(259 + 1091)))) then v146=2;break;end end end if ((1992<(2612 -(524 + 64))) and (v146==0)) then local v200=0;while true do if ((v200==(1 + 0)) or ((2096 -1310)>(6591 -4231))) then v146=2 -(1 -0);break;end if (((264 -(150 + 114))==v200) or (3653<=(3641 -(62 + 63)))) then v147=0 + 0;v148=nil;v200=1 + 0;end end end if ((v146==(6 -4)) or (((11807 -6349) -(486 + 1079))==(2594 -(90 + 283)))) then local v201=0 + 0;while true do if ((v201==((2 -1) + 0)) or ((1055 -(75 + 410))<(454 + 60))) then v146=3;break;end if (((5798 -(586 + 611))>(3478 -(228 + 262))) and (v201==(0 -0))) then v151=nil;v152=nil;v201=1;end end end if ((v146==(1 + 2)) or (99>2732)) then while true do if ((v147==2) or ((958 -342)<=(834 -282))) then local v214=846 -(791 + 55);local v215;while true do if (((566 + 1673)<=(1380 + 3188)) and ((0 + 0)==v214)) then v215=0 -0;while true do if ((v215==(1 + 0)) or ((1725 + 690)>=(2017 + 475))) then v147=1882 -(265 + 1614);break;end if ((v215==(0 -0)) or ((10150 -6935)<(541 -(733 -339)))) then for v272=20 -(9 + 10),v149 do v89[v150 + v272]=v151[v272];end v152=v151[110 -(88 + 21)];v215=387 -(48 + 338);end end break;end end end if (((4 + 374)<(1145 -(452 + 34))) and (v147==(113 -(93 + 17)))) then if (v152 or (4154<=(3337 -(1452 + 36)))) then local v253=0 + 0;while true do if (((194 -(40 + 154))==v253) or ((12020 -7934)<(5216 -2724))) then v89[v150]=v152;v72=v91[1 + 2];break;end end else v72=v72 + (2 -1);end break;end if ((1913<=(5087 -2771)) and ((1681 -(384 + (2525 -(639 + 590))))==v147)) then local v216=0;while true do if ((v216==(0 + (0 -0))) or ((4901 -(369 + 290))<((567 -405) + 118))) then v150=v148 + (3 -1);v151={v89[v148](v89[v148 + 1 + 0 + 0],v89[v150])};v216=4 -3;end if ((v216==(1 + 0)) or ((2228 + 479)<(9080 -7186))) then v147=1 + 1;break;end end end if ((v147==(0 + 0)) or ((4095 + 110)<4179)) then local v217=0 + 0;local v218;while true do if (((1209 -(112 + 55))<=(714 + 576)) and (v217==(880 -(259 + 621)))) then v218=581 -(68 + 513);while true do if ((v218==((498 -(359 + 139)) + 0)) or ((3778 -(4393 -(1008 + 878)))>((3000 -(516 + 645)) + 302))) then v148=v91[(2470 -823) -(462 + 1183)];v149=v91[5 -(1 -0)];v218=1811 -(322 + 1488);end if ((v218==(1 + 0)) or ((519 + 4055)<=2154)) then v147=1;break;end end break;end end end end break;end end end elseif ((v92<=(56 -33)) or ((3948 -1035)<(2513 -(82 + 631)))) then if (((4568 -1906)>(13 + 536)) and (v92<=((2303 -(223 + 1402)) -(217 + 442)))) then if (((12239 -9730)>(2699 -(71 + 837))) and (v92<=17)) then if ((v92>((16 + 23) -23)) or ((2435 + 2555)<=(2470 + 1864))) then local v153=0 -0;local v154;local v155;while true do if ((v153==((40 + 7) -(45 + (209 -(37 + 171))))) or ((4717 -((1520 -(1384 + 124)) + 4))<3422)) then while true do if (((150 + 726)<=4891) and (v154==(0 -0))) then v155=v91[2 + 0];v89[v155]=v89[v155]();break;end end break;end if ((v153==(0 + 0)) or (2813>=2814)) then v154=0 + 0 + 0;v155=nil;v153=1 + 0;end end else v89[v91[1 + 1]]=v89[v91[(1423 -(234 + 116)) -((3077 -2162) + 155)]];end elseif ((v92>18) or ((1687 + 1865)<=(7854 -5443))) then v89[v91[3 -(2 -1)]]=v89[v91[3]][v89[v91[17 -13]]];else do return;end end elseif (((1603 + 1706)>=(2700 -(772 + 216))) and (v92<=21)) then if (((3359 -(609 + 961))<(3701 -(309 + 365))) and (v92>((1986 -(1079 + 338)) -(213 + 336)))) then v89[v91[7 -5]]={};else v89[v91[2]][v91[9 -(6 + 0)]]=v91[1094 -(683 + 407)];end elseif ((v92>(62 -40)) or ((5593 -3585)==3988)) then local v160=777 -((2482 -(1285 + 449)) + 29);local v161;local v162;while true do if ((v160==((0 -0) + (800 -(97 + 703)))) or ((4157 -3099)==(3206 -(134 + 408)))) then local v202=0 -0;while true do if (((66 + 57)==((112 -52) + 63)) and (v202==1)) then v160=1;break;end if (((1549 -(232 + 986))<(6854 -(11692 -9222))) and (v202==(453 -(433 + 20)))) then v161=v91[(23 + 300) -(5 + 316)];v162=v89[v91[3 + 0]];v202=1188 -(456 + 731);end end end if ((v160==(40 -(22 + 17))) or ((2912 + 489)>=(3130 + 1544))) then v89[v161 + 1 + 0]=v162;v89[v161]=v162[v91[510 -(331 + 175)]];break;end end else v89[v91[2]][v91[1749 -(574 + 1172)]]=v89[v91[927 -(921 + 2 + 0)]];end elseif ((((2988 -1671) -899)<(1458 -747)) and (v92<=(85 -58))) then if (((941 + 1631)<(3738 -(327 + 721))) and (v92<=(64 -39))) then if ((v92>24) or ((1898 -(180 + 1497))>=(2982 -(681 + 250)))) then local v164=0 + 0;local v165;local v166;local v167;while true do if ((v164==0) or ((1436 -(103 + 292))==(1298 -(60 + 737 + 125)))) then local v205=0 + 0;while true do if ((((589 -336) + 4276)==4529) and (v205==(1 + 0))) then v164=(2 -1) + 0;break;end if ((v205==(1191 -(1170 + 21))) or (((964 -(197 + 510)) + 1552)>=(6565 -(1268 + 650)))) then v165=18 -(8 + 10);v166=nil;v205=372 -(361 + 8 + 2);end end end if (((608 + 3058)==(5139 -(485 + 988))) and (v164==(1 -0))) then v167=nil;while true do if (((12459 -7986)>=(429 + 1087)) and (v165==(0 -0))) then local v220=0 + 0;local v221;while true do if (((765 + 680)>=(2008 -(1885 + 5))) and ((1059 -(90 + 689 + 280))==v220)) then v221=1803 -(714 + 820 + 269);while true do if (((2265 -1334)==931) and ((1077 -(106 + 675 + 295))==v221)) then v165=1 + 0;break;end if ((v221==(0 + 0)) or ((4312 -(904 + 138))==1240)) then v166=v91[2];v167={};v221=1 + 0;end end break;end end end if (((4770 -3401)<=(2962 + 335)) and (v165==(1 + (0 -0)))) then for v242=1 + 0, #v88 do local v243=(0 + 0) -0;local v244;local v245;while true do if (((9152 -6181)==(2542 + 429)) and (v243==(1 + 0))) then while true do if (((5609 -((2291 -(1189 + 509)) + 365))>(7260 -3001)) and (v244==(0 + 0))) then v245=v88[v242];for v275=0, #v245 do local v276=0 -0;local v277;local v278;local v279;while true do if (((1246 -(157 + 1088))==v276) or ((1419 + 770)>=4094)) then v279=v277[1 + 1 + 0 + 0];if (((v278==v89) and (v279>=v166)) or ((17060 -12136)<=(8264 -6073))) then local v291=(0 + 0) -0;local v292;local v293;while true do if (((0 -0)==v291) or ((2895 -(199 + 16))>(5849 -(1327 + 549)))) then v292=0 + (1064 -(670 + 394));v293=nil;v291=1;end if (((4651 -2277)<3102) and (v291==(1 + 0))) then while true do if ((v292==(0 + 0)) or (671==(2263 + 2525))) then v293=0;while true do if ((v293==(0 + 0)) or ((26 + 363)>=(2464 -1788))) then v167[v279]=v278[v279];v277[2 -1]=v167;break;end end break;end end break;end end end break;end if ((v276==((0 -0) + 0)) or ((8978 -5062)<(379 + 2309))) then local v290=0 -0;while true do if ((v290==1) or ((1407 + 1716)==(3139 + 1488))) then v276=1;break;end if (((3310 -(1068 + 96))==((14622 -11003) -(1342 + 131))) and (v290==(0 + 0))) then v277=v245[v275];v278=v277[2 -(1 + 0)];v290=2 -1;end end end end end break;end end break;end if ((v243==(0 -0)) or ((1766 + 554 + 391)>=(5797 -(1285 + 340)))) then local v263=1402 -(928 + 474);while true do if ((v263==(1250 -(467 + 783))) or ((1408 -(32 + 11))==(8851 -4939))) then v244=163 -(111 + 52);v245=nil;v263=1 + 0;end if (((3741 -(82 + 240))>(14101 -(2667 + 8042))) and (v263==((3338 -1449) -(37 + 1851)))) then v243=1 + 0;break;end end end end end break;end end break;end end elseif ((v91[1 + 1]==v89[v91[5 -1]]) or ((840 -(22 + 171))>((13834 -(554 + 582)) -(4353 + 5069)))) then v72=v72 + (1514 -(31 + 1482));else v72=v91[3 + 0];end elseif ((2203>(1393 + 306)) and (v92==(1 + 25))) then local v168=0;local v169;local v170;local v171;while true do if (((3006 -(289 + 130))<3848) and (v168==(0 -0))) then v169=0 + 0;v170=nil;v168=1 + 0;end if ((v168==(3 -2)) or (2810<(930 + 980))) then v171=nil;while true do if ((v169==1) or ((133 -93)==(2117 -1613))) then for v246=v170 + (738 -((2133 -(1286 + 372)) + 262)),v91[702 -(393 + 305)] do v171=v171   .. v89[v246];end v89[v91[5 -3]]=v171;break;end if (((3142 -(397 + 699))==(2948 -(669 + 233))) and ((0 + 0)==v169)) then v170=v91[120 -(15 + 102)];v171=v89[v170];v169=1609 -(545 + 1063);end end break;end end else local v172=282 -(263 + 19);local v173;local v174;local v175;local v176;local v177;local v178;while true do if (((1809 + 2889)>=((8000 + 2697) -7461)) and (v172==2)) then v177=nil;v178=nil;v172=3;end if ((v172==((1 -0) + 2)) or (2391<(986 + 53))) then while true do if ((3701==((2312 -947) + 2336)) and (v173==(1 -0))) then v176=nil;v177=nil;v173=308 -(96 + 210);end if (((578 -(145 + 148))<2960) and (v173==0)) then local v223=365 -(24 + 341);while true do if ((v223==(1 -0)) or (2688<=((1961 -(694 + 122)) + 840))) then v173=(1527 + 355) -(1454 + 427);break;end if (((1637 + 3176)==(6229 -(288 + 1128))) and (v223==((0 -0) + 0))) then v174=0 -0;v175=nil;v223=1 -0;end end end if ((v173==(1679 -(930 + 747))) or ((4892 -2220)>2792)) then v178=nil;while true do if ((v174==(1 + 0)) or ((5650 -(698 + 927))<=(4410 -(773 + 787)))) then local v259=0 + 0;local v260;while true do if ((v259==0) or ((5925 -(261 + 1241))<(5359 -4160))) then v260=0 -0;while true do if (((1449 + 898)>=(59 + 46)) and (v260==(1 + 0))) then v174=8 -6;break;end if (((1265 -(598 + 269))<=(7710 -5525)) and ((0 + 0 + 0)==v260)) then v73=(v177 + v175) -(1 + 0);v178=76 -(15 + 61);v260=1730 -(1196 + 533);end end break;end end end if ((4753>=(2632 + 539)) and (v174==(698 -(565 + 48 + 83)))) then for v264=v175,v73 do local v265=1186 -(824 + 362);local v266;local v267;while true do if (((0 -0)==v265) or ((5218 -3175)>=(8822 -4917))) then v266=0;v267=nil;v265=1;end if ((v265==(2 -(1 -0))) or ((1262 -722)==(3725 + 733))) then while true do if ((v266==0) or ((3589 -(189 + 559))>(8093 -4592))) then v267=385 -(183 + 202);while true do if (((911 + 504 + 638)>=(3043 -(1306 + 140))) and (v267==(0 -0))) then v178=v178 + (1 -0);v89[v264]=v176[v178];break;end end break;end end break;end end end break;end if ((v174==(1365 -(1079 + 286))) or (4094<=(5217 -((953 -(64 + 416)) + 869)))) then local v261=1968 -(1081 + 887);local v262;while true do if ((v261==(289 -(174 + 85 + 30))) or (4310<(3762 -1286))) then v262=387 -(313 + 74);while true do if ((v262==((1411 -(603 + 328)) -(408 + 72))) or ((4549 -2944)<(1342 -(1029 + 74)))) then local v286=0;while true do if (((2 -1)==v286) or (((1602 -1006) + 3407)==1239)) then v262=1 + 0;break;end if (((4161 -1150)<=((5363 -2945) + 1403)) and (v286==0)) then v175=v91[2];v176,v177=v86(v89[v175](v89[v175 + (677 -(574 + 102))]));v286=550 -(322 + 227);end end end if (((1 -0)==v262) or (1434==(12401 -8230))) then v174=577 -(390 + 186);break;end end break;end end end end break;end end break;end if (((2431 + 49)<=(339 + 2292)) and (v172==(639 -(150 + 157 + 332)))) then v173=0 + 0;v174=nil;v172=61 -(28 + 32);end if ((1==v172) or ((2795 + 1885)<(4726 -(1263 + 561)))) then v175=nil;v176=nil;v172=2;end end end elseif (((814 + 142)<4784) and (v92<=((1464 -(690 + 766)) + 21))) then if (((4788 -(206 + 197))<=(2226 + 2471)) and (v92>(92 -64))) then v72=v91[1 + (903 -(148 + 753))];else local v179=0 -0;local v180;local v181;while true do if (((1 + 0)==v179) or ((2834 -(1122 + 573))<(1455 -837))) then while true do if ((v180==(0 + 0 + 0)) or ((269 + 4352)<=(5744 -3702))) then v181=v91[4 -2];v89[v181](v13(v89,v181 + (3 -2),v91[10 -7]));break;end end break;end if (((12859 -(11495 -(536 + 703)))>(3777 -(277 + 1245))) and (v179==(1644 -(1579 + 65)))) then v180=0 + 0;v181=nil;v179=1;end end end elseif ((v92>(1668 -(368 + 1270))) or ((3334 -2089)==(4463 -(598 + 67)))) then v38[v91[809 -(188 + 618)]]=v89[v91[5 -3]];else v89[v91[2]]=v30(v84[v91[1 + 2]],nil,v38);end v72=v72 + 1 + 0;break;end if ((v97==((2273 -1254) -(995 + 24))) or (2050==(2019 -860))) then local v100=0;while true do if ((v100==(1900 -(606 + 1293))) or ((93 + 873)>=3949)) then v97=1339 -(1272 + 66);break;end if ((v100==(0 -0)) or ((8798 -4299)<(196 + 609))) then v91=v82[v72];v92=v91[1 + 0 + 0];v100=(1 + 1) -1;end end end end break;end end break;end end end end A,B=v28(v11(v76));if  not A[1] then local v93=v36[4][v72] or "?";error("Script error at ["   .. v93   .. "]:"   .. A[2]);else return v13(A,2,B);end end;end end end return v30(v29(),{},v17)();end end end vv9());break;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end end end
