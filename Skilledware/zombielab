do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==3) then v13=unpack or table.unpack;v14=tonumber;v15=nil;function v15(v16,v17)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==3) then v24=nil;function v24()local v39=0;local v40;local v41;local v42;local v43;while true do if (v39==(1 + 0)) then return (v43 * 16777216) + (v42 * (279925 -214389)) + (v41 * (2010 -(827 + 927))) + v40;end if ((364 -(204 + 160))==v39) then v40,v41,v42,v43=v2(v16,v19,v19 + ((3 + 2) -2));v19=v19 + (1809 -(665 + 1140));v39=(506 -233) -(110 + 162);end end end v25=nil;v18=4;end if (v18==6) then v29=nil;function v29()local v44=0 -0;local v45;local v46;local v47;local v48;local v49;local v50;local v51;while true do if (v44~=(7 -5)) then else v49=nil;v50=nil;v44=2 + 1;end if (v44==(6 -3)) then v51=nil;while true do if (v45~=0) then else v46={};v47={};v48={};v45=2 -1;end if (v45==(717 -(205 + 509))) then local v79=0 + 0;local v80;while true do if (v79==(105 -(16 + 89))) then v80=1518 -(1238 + 280);while true do if (1==v80) then return v49;end if (v80~=(0 -0)) then else local v113=0;while true do if (v113==0) then for v119=787 -(504 + 282),v24() do v47[v119-(462 -(399 + 62))]=v29();end for v121=1353 -(1283 + 69),v24() do v48[v121]=v24();end v113=1 -0;end if (v113==(919 -(595 + 323))) then v80=2 -1;break;end end end end break;end end end if (2~=v45) then else for v84=2 -1,v50 do local v85=0;local v86;local v87;local v88;while true do if (0~=v85) then else v86=0 + 0;v87=nil;v85=1;end if (v85==(809 -(754 + 54))) then v88=nil;while true do if (v86==1) then if (v87==(2 -1)) then v88=v22()~=0;elseif (v87==(2 + 0)) then v88=v25();elseif (v87==(1232 -(813 + 416))) then v88=v26();end v51[v84]=v88;break;end if (v86~=(0 + 0)) then else v87=v22();v88=nil;v86=2 -1;end end break;end end end v49[6 -3]=v22();for v89=1 + 0,v24() do local v90=0 + 0;local v91;local v92;while true do if (v90==(1 + 0)) then while true do if (v91~=(549 -(113 + 436))) then else v92=v22();if (v21(v92,1486 -(12 + 1473),1852 -(1685 + 166))==(0 + 0)) then local v115=0 + 0;local v116;local v117;local v118;while true do if (v115==(0 -0)) then v116=v21(v92,2,3 -0);v117=v21(v92,6 -2,1540 -(1253 + 281));v115=203 -(104 + 98);end if ((488 -(18 + 469))==v115) then local v125=0 -0;while true do if (v125==(1430 -(1258 + 171))) then v115=2;break;end if (v125~=(1164 -(209 + 955))) then else v118={v23(),v23(),nil,nil};if (v116==(0 + 0)) then local v129=1403 -(1154 + 249);local v130;local v131;while true do if (v129~=(1705 -(1289 + 416))) then else v130=0 + 0;v131=nil;v129=1;end if (v129~=(1 + 0)) then else while true do if (v130~=(0 -0)) then else v131=0 -0;while true do if (v131~=(1987 -(1309 + 678))) then else v118[3]=v23();v118[4]=v23();break;end end break;end end break;end end elseif (v116==(3 -2)) then v118[627 -(67 + 557)]=v24();elseif (v116==(5 -3)) then v118[605 -(37 + 565)]=v24() -(2^(15 + 1));elseif (v116~=(1 + 2)) then else local v212=1092 -(289 + 803);local v213;local v214;local v215;while true do if (v212==(887 -(710 + 176))) then v215=nil;while true do if (v213~=(1834 -(1078 + 756))) then else local v260=0;while true do if (v260==(1353 -(520 + 832))) then v213=1 + 0;break;end if (v260~=(0 + 0)) then else v214=357 -(252 + 105);v215=nil;v260=1;end end end if (v213~=(1 + 0)) then else while true do if (v214~=(0 + 0)) then else v215=0 -0;while true do if (v215==(0 + 0)) then v118[1839 -(1145 + 691)]=v24() -((2 -0)^(11 + 5));v118[468 -(359 + 105)]=v23();break;end end break;end end break;end end break;end if (v212~=0) then else v213=0 -0;v214=nil;v212=1;end end end v125=727 -(339 + 387);end end end if ((2 + 1)==v115) then if (v21(v117,77 -(15 + 59),1 + 2)~=1) then else v118[5 -1]=v51[v118[4]];end v46[v89]=v118;break;end if ((2 + 0)==v115) then local v127=985 -(490 + 495);while true do if (v127~=(1118 -(221 + 896))) then else v115=3;break;end if ((0 -0)==v127) then if (v21(v117,1,1 -0)==1) then v118[2]=v51[v118[1004 -(124 + 878)]];end if (v21(v117,2 + 0,2)~=1) then else v118[583 -(455 + 125)]=v51[v118[10 -7]];end v127=1;end end end end end break;end end break;end if (v90==(0 + 0)) then v91=0;v92=nil;v90=1;end end end v45=1376 -(1224 + 149);end if (v45~=(3 -2)) then else local v82=0 -0;local v83;while true do if (v82~=0) then else v83=0;while true do if (v83==(0 -0)) then v49={v46,v47,nil,v48};v50=v24();v83=1276 -(534 + 741);end if (v83==(1 + 0)) then v51={};v45=2;break;end end break;end end end end break;end if (v44==(1 + 0)) then local v73=0 + 0;while true do if ((1 + 0)==v73) then v44=1803 -(415 + 1386);break;end if (v73==(1802 -(10 + 1792))) then v47=nil;v48=nil;v73=2 -1;end end end if (v44~=(0 -0)) then else v45=0 -0;v46=nil;v44=997 -(995 + 1);end end end v30=nil;v18=7;end if (v18==2) then function v22()local v52=0;local v53;while true do if (v52==(0 -0)) then v53=v2(v16,v19,v19);v19=v19 + (2 -1);v52=1 + 0;end if (1==v52) then return v53;end end end v23=nil;function v23()local v54=848 -(236 + 612);local v55;local v56;while true do if (v54==(1 + 0)) then return (v56 * (244 + (1380 -(972 + 396)))) + v55;end if (v54==(0 -0)) then v55,v56=v2(v16,v19,v19 + (866 -(6 + 858)));v19=v19 + (989 -((1129 -(696 + 341)) + 895));v54=152 -(96 + 55);end end end v18=3;end if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==7) then function v30(v31,v32,v33)local v57=0;local v58;local v59;local v60;while true do if (v57==1) then v60=v31[3];return function(...)local v74=1;local v75= -1;local v76={...};local v77=v12("#",...) -1;local function v78()local v93=v58;local v94=Const;local v95=v59;local v96=v60;local v97=v28;local v98={};local v99={};local v100={};for v107=0 + 0,v77 do if ((v107>=v96) or (262>2346)) then v98[v107-v96]=v76[v107 + (2 -1)];else v100[v107]=v76[v107 + (1885 -(1557 + 327))];end end local v101=(v77-v96) + (1 -0);local v102;local v103;while true do local v108=0 + 0;local v109;local v110;while true do if ((v108==(1143 -(502 + 640))) or ((501 -(229 + 177))==(129 + 376))) then while true do if (((690 + 316)==(3208 -2202)) and (v109==(487 -(192 + 295)))) then v110=0 + 0;while true do if (((692 + (7919 -4662))>=(4932 -(85 + 1849))) and (v110==(2 -1))) then if (((1741 -1090)<1615) and (v103<=(8 + 7))) then if (((1009 + 1234)>=(1000 -(15 + 1))) and (v103<=(15 -8))) then if (((1398 + 3162)>(80 + 97 + (129 -39))) and (v103<=(1093 -(861 + 229)))) then if ((v103<=((902 -(625 + 276)) + 0)) or (1961>((41408 -23792) -13420))) then if (((906 -454)<(5532 -(882 + 1002))) and (v103==(1412 -(931 + (1163 -682))))) then local v137=0 -0;local v138;local v139;local v140;local v141;local v142;local v143;while true do if ((v137==(1227 -(620 + 604))) or ((1571 -(676 + 607))>=(2994 -((3370 -1964) + 373 + 138)))) then while true do if ((v138==(0 -0)) or ((1882 + 1027)>=(1556 + 2344 + 657))) then local v242=0 + 0;while true do if ((v242==(0 -0)) or (1100>=(8921 -6061))) then v139=0;v140=nil;v242=4 -3;end if ((v242==1) or ((4564 -1849)==(3025 -(272 + 205)))) then v138=987 -(362 + 624);break;end end end if (((1075 -462)==(316 + 297)) and (v138==1)) then local v243=0;while true do if ((v243==((4017 -2521) -(774 + 721))) or ((863 + 78 + 368)>(4361 -(573 + 87)))) then v138=1131 -((1188 -418) + 353 + 6);break;end if (((680 -(8 + 8))<=(6145 -(323 + 1072))) and ((0 + (1199 -(854 + 345)))==v243)) then v141=nil;v142=nil;v243=1 + 0;end end end if (((4645 -(35 + 58))>(12338 -9787)) and (v138==(3 -1))) then v143=nil;while true do if ((v139==((2934 -(73 + 1615)) -(676 + 570))) or (2401>(184 + 3601))) then local v262=0;while true do if (((3431 + 180)<4851) and (v262==1)) then v139=1;break;end if ((1522<=(3732 -(30 + 1114))) and ((0 -0)==v262)) then local v282=0;while true do if (((3811 -(7 + 843))<(2459 + 1747)) and (v282==(0 + (0 -0)))) then v140=v102[478 -(282 + 194)];v141,v142=v97(v100[v140](v100[v140 + (1830 -(144 + 1685))]));v282=1;end if ((v282==((611 + 907) -(51 + 1466))) or (4162<3588)) then v262=1 + 0;break;end end end end end if (((4711 -(768 + 141))==(2308 + 1494)) and (v139==(561 -(167 + 392)))) then for v272=v140,v75 do local v273=0 -(115 -(35 + 80));local v274;while true do if ((v273==(0 + 0)) or ((7992 -4948)==((340 -183) + 113))) then v274=(1596 -755) -(355 + 486);while true do if (((1664 + 843)==(1444 + 1063)) and (0==v274)) then v143=v143 + 1;v100[v272]=v141[v143];break;end end break;end end end break;end if ((v139==(3 -2)) or ((4704 -(18 + 878))<=3028)) then local v263=1998 -((2892 -(1428 + 119)) + 653);while true do if ((((610 -221) + 1160)<=(14944 -(3458 + 7830))) and (v263==(1410 -(426 + 983)))) then v139=1583 -(338 + 1243);break;end if (((514 + 185)<(4121 -((463 -344) + 1014))) and (v263==(34 -(24 + 10)))) then v75=(v142 + v140) -(1 + 0 + 0);v143=0 -0;v263=2 -1;end end end end break;end end break;end if (((8962 -5795)==(4016 -(110 + 739))) and (v137==(1 + 0))) then v140=nil;v141=nil;v137=(1 -0) + 1;end if (((801 + 697)>((625 + 27) -165)) and (v137==2)) then v142=nil;v143=nil;v137=4 -1;end if (((1037 -471)>(2055 -1638)) and ((0 + 0)==v137)) then v138=0;v139=nil;v137=1107 -(324 + 339 + 443);end end else for v210=v102[(1663 -(167 + 1492)) -2],v102[138 -(106 + 13 + 16)] do v100[v210]=nil;end end elseif ((v103>(2 + 0)) or (((10288 -(92 + 906)) -6898)==(168 + 4378))) then v100[v102[2 + 0]]= -v100[v102[3 + 0]];else v100[v102[2]][v102[3 + 0]]=v100[v102[4]];end elseif (((10895 -6300)>=(521 + 520)) and (v103<=5)) then if (((1743 -(2326 -(538 + 1108)))==(1033 + 30)) and (v103>(13 -9))) then local v146=0;local v147;local v148;while true do if ((v146==(0 -0)) or ((5303 -(134 + 269))>(5161 -(58 + 134)))) then v147=0 -0;v148=nil;v146=(6471 -4496) -(730 + 1244);end if (((6722 -1745)>1008) and (v146==(788 -((2162 -1721) + 346)))) then while true do if ((((1216 + 1133) -(504 + 516))<((12015 -(103 + 1616)) -6835)) and (v147==(0 + 0))) then v148=v102[2];v100[v148](v100[v148 + 1 + 0]);break;end end break;end end elseif ((v100[v102[644 -(602 + 40)]]==v102[5 -1]) or ((3651 -(80 + 204))>=(381 + 1199 + 2565))) then v74=v74 + (2 -1);else v74=v102[11 -8];end elseif ((v103==(8 -2)) or ((2093 -1548)<=(247 -(10 + 38)))) then v100[v102[2]]=v100[v102[731 -(713 + 15)]][v102[1562 -(462 + 1096)]];else v100[v102[2 + 0]]={};end elseif ((v103<=(1199 -(1151 + 37))) or ((6120 -4441)>(64 + 4653))) then if (((730 + 2881)>=((6827 -2576) -(390 + 467))) and (v103<=(12 -3))) then if (((7832 -6263)<=4040) and (v103==8)) then if (((840 + 1231)<(7336 -(5760 -(1395 + 493)))) and  not v100[v102[202 -(64 + 136)]]) then v74=v74 + (552 -(532 + 19));else v74=v102[1621 -(1079 + 539)];end else v100[v102[(945 -(176 + 767)) + (0 -0)]]=v100[v102[1241 -(285 + 953)]];end elseif (((754 + 1392)>(1516 + 437)) and (v103==(47 -(5 + 32)))) then local v152=0;local v153;local v154;local v155;while true do if ((v152==(1 + 0)) or ((2592 -(113 + 554))>=(977 + 3190))) then v155=nil;while true do if ((v153==(0 -0)) or (1983>(3416 -(168 + 843)))) then local v244=0;while true do if ((v244==(1478 -(1198 + 280))) or (2197==1670)) then v154=0 + 0;v155=nil;v244=1 + 0;end if ((v244==((268 -(250 + 17)) + 0)) or ((253 + (2269 -(1639 + 246)))>=(4124 -(101 + (698 -468))))) then v153=1;break;end end end if (((1 -0)==v153) or ((1496 + 2446)<(2306 -(905 + 1031)))) then while true do if ((v154==(378 -(369 + 9))) or ((845 -(311 + 514))>=(2459 -1495))) then v155=v102[569 -(429 + 138)];v100[v155](v13(v100,v155 + (659 -(310 + 348)),v75));break;end end break;end end break;end if (((2797 + 938)>=(3300 -(1770 + 29))) and (v152==(0 -0))) then v153=0 + 0;v154=nil;v152=1318 -((1543 -967) + 741);end end else local v156=0 -0;local v157;local v158;while true do if (((328 -(211 + 117))==v156) or ((1213 + 1465)>=4730)) then v157=0;v158=nil;v156=1;end if ((v156==(1 + 0)) or (3725<(2043 -(613 + 954)))) then while true do if (((15624 -11878)<=(694 + 3375)) and (v157==(896 -(621 + 275)))) then v158=v102[2 + 0];v100[v158](v13(v100,v158 + (2 -1),v102[1619 -(389 + 556 + 603 + 68)]));break;end end break;end end end elseif ((3337<=(11871 -8522)) and (v103<=(33 -20))) then if ((v103>(1406 -(179 + 1215))) or ((6232 -2464)==(13176 -(3303 + 6430)))) then v100[v102[1 + 1]]=v33[v102[3]];else local v160=398 -(209 + 189);local v161;local v162;local v163;local v164;while true do if ((724<(2654 -(394 + 233))) and (v160==(1 + 0))) then v163=nil;v164=nil;v160=2;end if ((48<=(265 + 1157)) and (v160==(1001 -(152 + 849)))) then v161=1751 -(1719 + 32);v162=nil;v160=1;end if (((14744 -9908)>(1809 + 262)) and (v160==(8 -(13 -7)))) then while true do if (((171 + (1954 -(731 + 1174)))<=((3679 -2775) + 980)) and (v161==(1 -0))) then v164=0 + 0;for v252=v162,v102[4] do local v253=0 + 0;local v254;while true do if ((v253==(1966 -(260 + 1706))) or ((5327 -(339 + 191 + 449))<(8749 -6844))) then v254=0 -(1980 -(1772 + 208));while true do if (((6016 -4155)==1861) and (v254==((224 + 46) -(132 + 138)))) then v164=v164 + (458 -(79 + (1378 -(983 + 17))));v100[v252]=v163[v164];break;end end break;end end end break;end if ((v161==(1985 -(888 + 1097))) or ((16500 -12940)<=(10081 -6935))) then v162=v102[1408 -((52 -28) + 193 + 1189)];v163={v100[v162](v13(v100,v162 + (2 -1),v75))};v161=4 -3;end end break;end end end elseif ((v103==(49 -35)) or (3952<=(2513 -(664 + 18)))) then local v165=1747 -(495 + 1252);local v166;while true do if ((v165==(0 -0)) or (2323<(1685 -(34 + 363)))) then v166=v102[2 -0];v100[v166]=v100[v166](v13(v100,v166 + (1894 -(1653 + 240)) + 0,v102[3]));break;end end else v100[v102[1647 -(1289 + 356)]][v102[9 -6]]=v102[7 -3];end elseif ((4319>(134 + 2270)) and (v103<=23)) then if ((v103<=(344 -(158 + 167))) or (1>=(1159 + (9009 -5765)))) then if ((1815>(1296 -889)) and (v103<=(10 + 7))) then if ((3120==(3906 -(168 + (1681 -1063)))) and (v103==(16 + 0))) then local v168=0 + 0;local v169;local v170;local v171;local v172;while true do if ((v168==(754 -(36 + 717))) or ((4554 -(844 + 27))<=1411)) then v171=nil;v172=nil;v168=2 + 0;end if (((1911 -(138 + 141))>((2123 -560) -(171 + 12 + 10))) and ((988 -(149 + 411 + 426))==v168)) then while true do if (((4276 -(131 + 178))>(4668 -(169 + 777))) and ((1 -0)==v169)) then v172=nil;while true do if (((4280 -(885 + (1735 -(378 + 718))))>=(7185 -4994)) and (v170==(1 + 0))) then for v275=v171 + (2 -1) + 0,v102[2 + 2] do v172=v172   .. v100[v275];end v100[v102[351 -(341 + 8)]]=v172;break;end if (((82 + 1114)<=(1517 + 1857)) and (v170==((0 -0) + 0))) then local v265=0 -0;local v266;while true do if ((v265==(649 -(416 + 193 + 40))) or (828>(4601 -(181 + 676)))) then v266=0 -0;while true do if ((v266==(1 + 0)) or (1199>(2550 -(347 + 62 + 506)))) then v170=312 -(4 + 24 + 283);break;end if (((653 + (2326 -1102))<=(412 + 181 + 2020)) and (v266==(0 -(0 -0)))) then v171=v102[1900 -(1817 + (304 -224))];v172=v100[v171];v266=(1531 -(1170 + 360)) + 0;end end break;end end end end break;end if (((194 + 2111)<((19125 -13477) -1795)) and (0==v169)) then v170=23 -(6 + 17);v171=nil;v169=2 -1;end end break;end if ((((1157 + 311) -(483 + 985))==v168) or ((459 + 41)>3670)) then v169=(3152 -(544 + 1413)) -(550 + 645);v170=nil;v168=(2 + 0) -1;end end else local v173=0 + 0;local v174;local v175;local v176;while true do if ((v173==(2 -1)) or (((4585 -(840 + 238)) -(413 + 91))==(405 + 272))) then v176={};v175=v10({},{__index=function(v222,v223)local v234=0 + 0;local v235;while true do if ((2991>=2552) and ((0 -0)==v234)) then local v261=0 -0;while true do if (((1960 + (3174 -(265 + 435)))>(5060 -(1283 + 615))) and (v261==(0 + (1729 -(1316 + 413))))) then v235=v176[v223];return v235[3 -2][v235[5 -3]];end end end end end,__newindex=function(v224,v225,v226)local v236=0;local v237;local v238;while true do if ((744<(2041 -(10 + 24))) and (v236==(589 -(321 + 267)))) then while true do if ((v237==0) or ((3024 -(283 + 992))>=((489 + 3302) -(643 + 725)))) then v238=v176[v225];v238[1][v238[6 -4]]=v226;break;end end break;end if ((2066<=4859) and (v236==(0 + 0))) then v237=0;v238=nil;v236=3 -(727 -(178 + 547));end end end});v173=1892 -(1491 + (647 -248));end if (((4369 -(645 + 1226))<3160) and (v173==((0 -0) + 0))) then local v217=784 -((1941 -(836 + 649)) + (1895 -(1541 + 26)));while true do if ((v217==(42 -(4 + 38))) or ((3079 + 1221)<(7977 -5684))) then v174=v95[v102[362 -((467 -248) + 73 + 67)]];v175=nil;v217=1;end if ((v217==(1 + 0)) or ((2395 -(761 + 716))>2514)) then v173=1 + (1874 -(1450 + 424));break;end end end if (((5986 -(113 + 1617))<=(6206 -(151 + (2514 -(386 + 540))))) and (v173==(3 -1))) then for v227=1687 -(529 + 1157),v102[10 -6] do local v228=0;local v229;while true do if (((4665 -3405)<(4623 -1626)) and (1==v228)) then if (((1210 -(659 + (568 -(397 + 15))))<=2659) and (v229[1]==(1579 -(1424 + 146)))) then v176[v227-(347 -(208 + 138))]={v100,v229[3 + 0]};else v176[v227-(1 + (0 -0))]={v32,v229[1200 -(146 + 1051)]};end v99[ #v99 + (2 -1) + 0]=v176;break;end if ((v228==(0 + 0)) or ((5060 -(316 + 317))<=(2413 + 866))) then local v256=0 + 0;while true do if (((2914 -784)<=(2726 + 1610)) and (v256==(0 + 0))) then v74=v74 + (1 -0);v229=v93[v74];v256=1584 -(562 + 1021);end if (((1568 -(273 + 77))==(2264 -(40 + 11 + 995))) and (v256==(1 + 0))) then v228=1;break;end end end end end v100[v102[1882 -(1445 + 435)]]=v30(v174,v175,v33);break;end end end elseif ((4436>(2739 -((331 -168) + 851))) and (v103==(8 + 10))) then local v177=0 -0;local v178;local v179;local v180;local v181;local v182;while true do if ((v177==((23 -18) -3)) or ((2780 + 872)<3633)) then v182=nil;while true do if ((3819>(9866 -7170)) and (v178==(2 -1))) then local v245=0 + (0 -0);while true do if (((1692 -(963 + 728))==v245) or ((5383 -(325 + 1001))<=3277)) then v178=5 -3;break;end if ((((612 + 981) -(423 + (2676 -(136 + 1370))))==v245) or ((12206 -7320)<=(3628 -(67 + 1747)))) then local v269=598 -(545 + 53);while true do if ((v269==(987 -(933 + 54))) or ((1937 + 156)>2822)) then v75=(v181 + v179) -(1 + 0);v182=0 + 0;v269=4 -3;end if ((v269==(1 + 0)) or ((2969 -(70 + 24))>=(7989 -4427))) then v245=3 -2;break;end end end end end if ((((1616 + 320) -(1281 + 284 + 286))<=4257) and (v178==2)) then for v257=v179,v75 do local v258=(496 -(400 + 96)) -0;local v259;while true do if ((v258==(0 + 0)) or ((483 + 1654)>(16759 -12884))) then v259=0 + 0;while true do if (((6174 -4330)==(1269 + 79 + 496)) and (v259==((0 + 0) -0))) then v182=v182 + 1;v100[v257]=v180[v182];break;end end break;end end end break;end if ((v178==(0 + 0)) or ((2672 + 1705)<=(1931 + 449))) then local v246=0 -0;local v247;while true do if (((643 + 360)<2596) and (v246==(745 -(472 + (1814 -(646 + 895)))))) then v247=0;while true do if ((v247==(2 -1)) or ((1438 -(498 + 222))>(1692 + 2467))) then v178=1 -0;break;end if (((1430 -(144 + 647))==(2391 -1752)) and (v247==(0 + 0))) then v179=v102[2 + 0];v180,v181=v97(v100[v179](v13(v100,v179 + (1 -0),v102[3])));v247=535 -(398 + 136);end end break;end end end end break;end if ((v177==(1 -0)) or ((277 + 306)>2386)) then local v219=0 -(0 -0);while true do if ((v219==1) or ((3621 -1080)<=(468 + 545))) then v177=2;break;end if (((1571 + 2854)>(810 + 39)) and (v219==((1864 -(1750 + 114)) -0))) then v180=nil;v181=nil;v219=75 -((214 -153) + 3 + 10);end end end if ((v177==(0 -0)) or (4475<3863)) then v178=0;v179=nil;v177=1;end end else do return;end end elseif ((v103<=(12 + 9)) or (4017<=(2970 -583))) then if ((3103>=(1815 -((1306 -(828 + 78)) + 294))) and (v103==(14 + 6))) then v100[v102[2]]=v100[v102[1 + 2]][v100[v102[4]]];else local v184=0 + 0;local v185;local v186;while true do if (((697 + 1196)==(4606 -2713)) and ((1 + 0)==v184)) then while true do if (((2198 + 1118 + 502)>=578) and (v185==(1551 -(850 + 701)))) then v186=v102[2 -(0 + 0)];v100[v186]=v100[v186]();break;end end break;end if ((v184==(941 -(625 + 316))) or ((2983 -1825)>4460)) then v185=0;v186=nil;v184=705 -(466 + 238);end end end elseif (((4583 -2935)<=((2523 -(618 + 804)) + 760)) and (v103==(21 + 1))) then local v187=0;local v188;local v189;local v190;while true do if (((4029 -(182 + 105 + 229))>(997 + 403)) and (v187==(683 -((918 -(75 + 310)) + 149)))) then v190=nil;while true do if ((v188==(901 -(198 + 702))) or ((7074 -(396 + 2935))<=(1493 + 1572))) then while true do if ((v189==(0 -0)) or ((7117 -4856)==1110)) then v190=v102[2 + 0];v100[v190]=v100[v190](v13(v100,v190 + (200 -(83 + 116)),v75));break;end end break;end if ((v188==0) or (1303==(2348 -(607 + 158)))) then v189=0;v190=nil;v188=1;end end break;end if (((311 + 174)<=3707) and (v187==(0 + 0))) then v188=0 -0;v189=nil;v187=1 + 0;end end else v74=v102[1 + 2];end elseif ((v103<=(37 -10)) or ((384 + 3842)<2167)) then if ((v103<=(48 -23)) or ((1402 -((232 -(50 + 159)) + 375))>((2929 -(1287 + 595)) + 852))) then if (((3814 + 719)>=(400 + 752)) and (v103==(679 -(475 + 180)))) then v100[v102[(653 -290) -(13 + 348)]]=v30(v95[v102[7 -4]],nil,v33);elseif (((3613 -(309 + 1467))<=(4097 -(45 + 578 + 846))) and (v102[1035 -(869 + 164)]==v100[v102[2 + 2]])) then v74=v74 + (1316 -(824 + 491)) + 0;else v74=v102[1602 -(720 + 879)];end elseif ((v103>(13 + 13)) or (3108>=(2224 + 2446))) then v100[v102[1 + 1]]=v102[1 + 2];else v100[v102[9 -7]]=v32[v102[3]];end elseif ((v103<=(2 + 27)) or (3288<=(1379 -596))) then if ((v103==(13 + 15)) or (4824<=(4305 -(542 + 1204)))) then v33[v102[1 + 1 + 1]]=v100[v102[6 -4]];else local v195=0 -0;local v196;local v197;local v198;local v199;local v200;while true do if ((v195==3) or ((2038 -(386 + 1205))>=(2731 + 827))) then if (((2433 -1218)<((6524 -(149 + 753)) -(75 + 616))) and v200) then local v239=0;local v240;local v241;while true do if ((v239==(0 -0)) or ((2325 -(958 + 233))>(4580 -(413 + 196)))) then v240=0 -0;v241=nil;v239=932 -(829 + 47 + 55);end if ((v239==(1 -0)) or ((1299 + 2147)<=((20354 -12204) -5014))) then while true do if (((2048 + (5915 -3847))>=(2631 -2104)) and (v240==(0 + 0))) then v241=0;while true do if (((18 + 241 + 2867)<(1872 + 2783)) and (v241==(895 -(231 + 664)))) then v100[v198]=v200;v74=v102[3];break;end end break;end end break;end end else v74=v74 + (2 -1);end break;end if ((4428>=(3578 -(425 + 51))) and (v195==1)) then local v220=0 + (0 -0);while true do if ((v220==(1 -0)) or ((12913 -8868)<=(13225 -10547))) then v195=1 + 1;break;end if ((3810==(117 + 3693)) and (v220==(0 -(88 -(24 + 64))))) then v198=v196 + 2;v199={v100[v196](v100[v196 + 1],v100[v198])};v220=1 + 0;end end end if (((2381 + 1846)==4227) and (v195==(1 + 1))) then for v230=1 + 0,v197 do v100[v198 + v230]=v199[v230];end v200=v199[692 -(65 + 626)];v195=10 -7;end if (((225 + 718)<(1118 + 158)) and (v195==(0 + 0))) then local v221=(1329 -(109 + 1220)) -0;while true do if (((1615 + 827)>(372 + 892)) and (v221==(1 -0))) then v195=1236 -(111 + 542 + 582);break;end if (((1767 -1391)<=(89 + 576)) and (v221==(0 -0))) then v196=v102[4 -2];v197=v102[13 -9];v221=2 -1;end end end end end elseif ((v103==(28 + 2)) or (2801<97)) then local v201=0 -(0 + 0);local v202;local v203;local v204;local v205;while true do if ((v201==(1 + 1)) or ((114 + 2355)>(1609 + (1993 -(479 + 256))))) then while true do if (((275 -126)<(5344 -(91 + 708))) and (v202==0)) then v203=0;v204=nil;v202=307 -(134 + 172);end if ((v202==(2 -1)) or ((504 + 902)==(232 + (8665 -5595)))) then v205=nil;while true do if (((7411 -5352)>=912) and (v203==1)) then for v276=1, #v99 do local v277=1420 -(1227 + 193);local v278;local v279;local v280;while true do if ((v277==(0 + 0)) or (264==(1793 -(838 + 601)))) then v278=0;v279=nil;v277=1 + 0;end if ((v277==(1 -0)) or (((4331 -3013) -(394 + 224))>=(1692 + 232))) then v280=nil;while true do if ((4736>2568) and (v278==0)) then v279=0 + 0;v280=nil;v278=1 + 0;end if (((1 + (311 -(59 + 252)))==v278) or ((2722 -(847 + 582))==((2560 -(131 + 1269)) + 1636))) then while true do if ((v279==(0 + 0)) or ((3973 + 844)==1136)) then v280=v99[v276];for v290=0, #v280 do local v291=0 -0;local v292;local v293;local v294;local v295;while true do if (((399 + 1 + 1284)<=(8501 -5694)) and (v291==(37 -(27 + 9)))) then v294=nil;v295=nil;v291=1455 -(1321 + 132);end if (((1469 -(86 + (1499 -(606 + 589))))<(1359 + 1496)) and (v291==(1570 -(777 + 791)))) then while true do if (((2659 -(379 + 1021))==1259) and (v292==(1 + 0))) then v295=v293[1 + 1];if (((v294==v100) and (v295>=v204)) or ((7368 -4109)>=(3959 -(412 + 267)))) then local v297=0 -0;while true do if ((v297==(0 -0)) or ((7336 -4424)<(2538 -(1041 + 640)))) then v205[v295]=v294[v295];v293[1]=v205;break;end end end break;end if (((1077 -(180 + 508))==(2103 -(1511 + 203))) and (v292==(924 -(763 + (657 -(165 + 331)))))) then local v296=0 -0;while true do if (((1205 + 2434)>(46 -33)) and (v296==(0 + 0))) then v293=v280[v290];v294=v293[1];v296=2 -1;end if ((v296==(3 -2)) or (4380<=(659 + 1668))) then v292=1 + 0 + 0;break;end end end end break;end if ((v291==(0 -0)) or ((3662 -1806)<(608 + 1242))) then v292=1218 -(336 + 575 + 307);v293=nil;v291=2 -1;end end end break;end end break;end end break;end end end break;end if ((v203==(0 -0)) or ((1319 + 1892)>=(2067 + 2087))) then local v271=1058 -(123 + 811 + 124);while true do if (((4359 + (604 -191))>(7424 -3955)) and (v271==(487 -(109 + 31 + 347)))) then local v283=0 -0;while true do if ((v283==(0 + 0)) or ((1012 -(500 + 194))<(135 + 124))) then v204=v102[1 + 1];v205={};v283=1;end if ((v283==(1 + 0)) or ((4315 -(15 + 27))<=(510 + 504))) then v271=1498 -(421 + 1076);break;end end end if ((v271==(1307 -(56 + 1250))) or (3394>(3635 -(2 + 7 + 73)))) then v203=3 -(1 + 1);break;end end end end break;end end break;end if ((v201==(0 + 0)) or ((9356 -5359)<=(1472 + 805))) then v202=0 -0;v203=nil;v201=1 + 0;end if ((v201==(210 -(204 + 5))) or (3010>(5653 -((674 -(43 + 32)) + 185)))) then v204=nil;v205=nil;v201=2 + 0;end end else local v206=0 -0;local v207;local v208;local v209;while true do if (((1861 + 236)==(4431 -2334)) and (v206==0)) then v207=0 -0;v208=nil;v206=1 + 0;end if ((v206==(2 -1)) or ((9914 -(5516 + 439))<3687)) then v209=nil;while true do if (((194 + 4060)>(1241 + 1010)) and (v207==(1248 -(141 + 1106)))) then v100[v208 + (1632 -(262 + (2396 -1027)))]=v209;v100[v208]=v209[v102[4]];break;end if (((1930 -(30 + 1900))==v207) or (((2079 -870) -944)>(7962 -3889))) then local v251=1147 -(604 + 543);while true do if ((v251==(1 + 0)) or ((3992 -(428 + 482))>4445)) then v207=1524 -(1314 + 209);break;end if ((((2360 -1165) -(175 + 795))<=1216) and (0==v251)) then v208=v102[3 -1];v209=v100[v102[6 -3]];v251=400 -(108 + 291);end end end end break;end end end v74=v74 + (3 -2);break;end if (((3407 -(22 + 3))==(4991 -(22 + 1587))) and (v110==(531 -(326 + 205)))) then local v123=0;local v124;while true do if (((3149 -(268 + 851))<=(17156 -12726)) and (v123==0)) then v124=499 -(30 + 469);while true do if ((v124==(0 -(584 -(91 + 493)))) or ((606 + 1690)>(4668 -((1630 -958) + 1319)))) then local v134=0 -0;while true do if (((2113 -855)>=(629 + 482)) and (v134==((1 -0) -0))) then v124=1;break;end if ((v134==(539 -(222 + 317))) or (2886==(2586 -(40 + (84 -37))))) then v102=v93[v74];v103=v102[1];v134=3 -2;end end end if (((3839 -(616 + 271))<(1089 + 2835)) and (v124==(3 -2))) then v110=1;break;end end break;end end end end break;end end break;end if (((1239 + 581)==(6248 -(4787 -(224 + 135)))) and (v108==(1134 -(86 + 1048)))) then v109=0 -0;v110=nil;v108=1984 -(459 + 1524);end end end end A,B=v28(v11(v78));if  not A[1] then local v104=v31[4][v74] or "?";error("Script error at ["   .. v104   .. "]:"   .. A[2]);else return v13(A,2,B);end end;end if (v57==0) then v58=v31[1];v59=v31[2];v57=1;end end end return v30(v29(),{},v17)();end if (v18==1) then v21=nil;function v21(v34,v35,v36)if v36 then local v67=0;local v68;while true do if (v67==0) then v68=(v34/((1926 -(1842 + 82))^(v35-(2 -1))))%((1 + (252 -(210 + 41)))^(((v36-(1 + 0)) -(v35-(1194 -(235 + 958)))) + (1 -0)));return v68-(v68%(1 + 0));end end else local v69=(2 + 0)^(v35-(1 + 0));return (((v34%(v69 + v69))>=v69) and 1) or (117 -(64 + (143 -90)));end end v22=nil;v18=2;end if (4==v18) then function v25()local v61=v24();local v62=v24();return (( -(2 + 0) * v21(v62,32)) + 1) * ((4 -2)^(v21(v62,(1987 -(499 + 1483)) + 16,58 -27) -(1747 -(61 + 272 + 391)))) * ((((v21(v62,1 + 0,(53 + 2) -35) * (2^(1295 -(477 + 786)))) + v61)/((2 + 0)^52)) + (1 -0));end v26=nil;function v26(v37)local v63;if  not v37 then local v70=0 -(0 + 0);while true do if (v70==(0 + 0)) then v37=v24();if (v37==(792 -(207 + 585))) then return "";end break;end end end v63=v4(v16,v19,(v19 + v37) -(1 + 0));v19=v19 + v37;local v64={};for v65=(3 -2) + 0, #v63 do v64[v65]=v3(v2(v4(v63,v65,v65)));end return v7(v64);end v18=5;end if (v18==0) then v19=1;v20=nil;v16=v5(v4(v16,5),"..",function(v38)if (v2(v38,2)==79) then v20=v1(v4(v38,1,1));return "";else local v71=0;local v72;while true do if (v71==0) then v72=v3(v1(v38,16));if v20 then local v105=0;local v106;while true do if (v105==0) then v106=v6(v72,v20);v20=nil;v105=1;end if (v105==1) then return v106;end end else return v72;end break;end end end end);v18=1;end end end v0=4;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==2) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (v0==4) then vv9());break;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end end end
